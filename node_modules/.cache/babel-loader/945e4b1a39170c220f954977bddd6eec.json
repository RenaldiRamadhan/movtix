{"ast":null,"code":"var _jsxFileName = \"E:\\\\github orang\\\\movtix-main\\\\src\\\\components\\\\hero-slide\\\\HeroSlide.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\nimport './hero-slide.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeroSlide = () => {\n  _s();\n\n  SwiperCore.use([Autoplay]);\n  const [movieItems, setMovieItems] = useState([]);\n  useEffect(() => {\n    const getMovies = async () => {\n      const params = {\n        page: 1\n      };\n\n      try {\n        const response = await tmdbApi.getMoviesList(movieType.popular, {\n          params\n        });\n        setMovieItems(response.results.slice(0, 4));\n        console.log(response);\n      } catch {\n        console.log('error');\n      }\n    };\n\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-slide\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      modules: [Autoplay],\n      grabCursor: true,\n      spaceBetween: 0,\n      slidesPerView: 1,\n      children: movieItems.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: _ref => {\n          let {\n            isActive\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: apiConfig.originalImage(item.backdrop_path)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 51\n          }, this);\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeroSlide, \"v2ja/IALY/F/8AFwp1LDsPz/EqM=\");\n\n_c = HeroSlide;\nexport default HeroSlide;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroSlide\");","map":{"version":3,"names":["React","useState","useEffect","SwiperCore","Autoplay","Swiper","SwiperSlide","tmdbApi","category","movieType","apiConfig","HeroSlide","use","movieItems","setMovieItems","getMovies","params","page","response","getMoviesList","popular","results","slice","console","log","map","item","i","isActive","originalImage","backdrop_path"],"sources":["E:/github orang/movtix-main/src/components/hero-slide/HeroSlide.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport SwiperCore, { Autoplay } from 'swiper';\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\nimport './hero-slide.scss';\n\nconst HeroSlide = () => {\n  SwiperCore.use([Autoplay]);\n\n  const [movieItems, setMovieItems] = useState([]);\n  useEffect(() => {\n    const getMovies = async () => {\n      const params = { page: 1 };\n      try {\n        const response = await tmdbApi.getMoviesList(movieType.popular, { params });\n        setMovieItems(response.results.slice(0, 4));\n        console.log(response);\n      } catch {\n        console.log('error');\n      }\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <div className=\"hero-slide\">\n      <Swiper modules={[Autoplay]} grabCursor={true} spaceBetween={0} slidesPerView={1}>\n        {movieItems.map((item, i) => (\n          <SwiperSlide key={i}>{({ isActive }) => <img src={apiConfig.originalImage(item.backdrop_path)} />}</SwiperSlide>\n        ))}\n      </Swiper>\n    </div>\n  );\n};\n\nexport default HeroSlide;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,UAAP,IAAqBC,QAArB,QAAqC,QAArC;AAEA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,OAAOC,OAAP,IAAkBC,QAAlB,EAA4BC,SAA5B,QAA6C,mBAA7C;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtBR,UAAU,CAACS,GAAX,CAAe,CAACR,QAAD,CAAf;EAEA,MAAM,CAACS,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,YAAY;MAC5B,MAAMC,MAAM,GAAG;QAAEC,IAAI,EAAE;MAAR,CAAf;;MACA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,OAAO,CAACY,aAAR,CAAsBV,SAAS,CAACW,OAAhC,EAAyC;UAAEJ;QAAF,CAAzC,CAAvB;QACAF,aAAa,CAACI,QAAQ,CAACG,OAAT,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CAAD,CAAb;QACAC,OAAO,CAACC,GAAR,CAAYN,QAAZ;MACD,CAJD,CAIE,MAAM;QACNK,OAAO,CAACC,GAAR,CAAY,OAAZ;MACD;IACF,CATD;;IAUAT,SAAS;EACV,CAZQ,EAYN,EAZM,CAAT;EAcA,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,uBACE,QAAC,MAAD;MAAQ,OAAO,EAAE,CAACX,QAAD,CAAjB;MAA6B,UAAU,EAAE,IAAzC;MAA+C,YAAY,EAAE,CAA7D;MAAgE,aAAa,EAAE,CAA/E;MAAA,UACGS,UAAU,CAACY,GAAX,CAAe,CAACC,IAAD,EAAOC,CAAP,kBACd,QAAC,WAAD;QAAA,UAAsB;UAAA,IAAC;YAAEC;UAAF,CAAD;UAAA,oBAAkB;YAAK,GAAG,EAAElB,SAAS,CAACmB,aAAV,CAAwBH,IAAI,CAACI,aAA7B;UAAV;YAAA;YAAA;YAAA;UAAA,QAAlB;QAAA;MAAtB,GAAkBH,CAAlB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA3BD;;GAAMhB,S;;KAAAA,S;AA6BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}